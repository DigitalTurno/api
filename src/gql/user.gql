directive @hasRole(role: Role!) on FIELD_DEFINITION

type User {
    id: ID!
    username: String!
    password: String!
    email: String!
    role: Role!
    status: Status!
    createdAt: Time!
    updatedAt: Time!
}

enum Role {
    SUPERUSER
    ADMIN
    ADVISER
    GUEST
}

input UserInput {
    username: String!
    password: String!
    email: String!
}

type QueryUser {
    users: [User] @goField(forceResolver: true)
    getUserById(id: ID!): User! @goField(forceResolver: true)
}

type MutationUser {
   createUser(input: UserInput): User! @goField(forceResolver: true)
   updateUser(id: ID!, input: UserInput): User! @goField(forceResolver: true)
   deleteUser(id: ID!): User! @goField(forceResolver: true)
}