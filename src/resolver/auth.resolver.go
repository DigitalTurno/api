package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"
	"fmt"

	"github.com/diegofly91/apiturnos/src/generated"
	"github.com/diegofly91/apiturnos/src/model"
)

// LoginUser is the resolver for the loginUser field.
func (r *mutationAuthResolver) LoginUser(ctx context.Context, obj *model.MutationAuth, input model.LoginUser) (*model.Token, error) {
	return r.authService.Login(input.Username, input.Password)
}

// UserCurrent is the resolver for the userCurrent field.
func (r *queryAuthResolver) UserCurrent(ctx context.Context, obj *model.QueryAuth) (*model.UserPayload, error) {
	return nil, fmt.Errorf("not implemented")
}

// MutationAuth returns generated.MutationAuthResolver implementation.
func (r *Resolver) MutationAuth() generated.MutationAuthResolver { return &mutationAuthResolver{r} }

// QueryAuth returns generated.QueryAuthResolver implementation.
func (r *Resolver) QueryAuth() generated.QueryAuthResolver { return &queryAuthResolver{r} }

type mutationAuthResolver struct{ *Resolver }
type queryAuthResolver struct{ *Resolver }
