package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"

	"github.com/diegofly91/apiturnos/src/generated"
	"github.com/diegofly91/apiturnos/src/schema/model"
)

// CreateUser is the resolver for the createUser field.
func (r *mutationUserResolver) CreateUser(ctx context.Context, obj *model.MutationUser, input *model.UserInput) (*model.User, error) {
	return r.userService.CreateUser(input)
}

// UpdateUser is the resolver for the updateUser field.
func (r *mutationUserResolver) UpdateUser(ctx context.Context, obj *model.MutationUser, id string, input *model.UserInput) (*model.User, error) {
	return r.userService.Update(id, input)
}

// DeleteUser is the resolver for the deleteUser field.
func (r *mutationUserResolver) DeleteUser(ctx context.Context, obj *model.MutationUser, id string) (*model.User, error) {
	return r.userService.DeleteUser(id)
}

// Users is the resolver for the users field.
func (r *queryUserResolver) Users(ctx context.Context, obj *model.QueryUser) ([]*model.User, error) {
	return r.userService.FindAll()
}

// GetUserByID is the resolver for the getUserById field.
func (r *queryUserResolver) GetUserByID(ctx context.Context, obj *model.QueryUser, id string) (*model.User, error) {
	return r.userService.FindById(id)
}

// MutationUser returns generated.MutationUserResolver implementation.
func (r *Resolver) MutationUser() generated.MutationUserResolver { return &mutationUserResolver{r} }

// QueryUser returns generated.QueryUserResolver implementation.
func (r *Resolver) QueryUser() generated.QueryUserResolver { return &queryUserResolver{r} }

type mutationUserResolver struct{ *Resolver }
type queryUserResolver struct{ *Resolver }
